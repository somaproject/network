The NIC test jig for VHDL and results...

The goal of the test code is to make sure we can successfully:
1. download rawbits to the FPGA
2. make sure the memory interface has all necessary pins connected, and can actually work at our desired speed. 
3. send one pkt over and over and over. 
4. Flash das blinkenlights


To do this, we basically wire up the memory controller to do the following:
on chan 1, write in bytes
on chan 2, read in bytes
The reader thread will follow the writing thread by some arbitrary number of ticks, and will make sure the words == what was recently written

For outputting to the PHY, it's easy: we just pre-load the PHY with a frame and a counter with the number of bytes to transmit; then every second we send out the frame. 

We start out with the counter's lower 10 bits reading bytes from the BlockSelect RAM, and pull TX_EN low when CNT > (FRAMELEN-1) . We reset the counter when CNT=CNTRST; 

For each cycle, we'll toggle the TX LED for the duration of TX_EN. 

RX_DV is tied to the RX LED. 

The Serial interface is configured, but mostly to convince myself that it works. 
Added LEDPOWER with a flasher. 

				   
------------------------------------------------------------
RESULTS
-----------------------------------------------------------
30 Oct 2003
Memory has problems. When we configure the testout to only write 0x01010101, we see the one-cycle data high asserted by the FPGA. We also see the WE preceeding that cycle by 2 ticks, as expected. What we don't see is the data out. 

Memory pin sanity check: All pins appear correct

WHY THE HECK ARENT THE TS REGISTERS BENIG PACKED INTO THE IOB? 

Ghetto test:
write 01010101 to 00000
write 02020202 to 00001
read  0000
read  0001
			

Wow, had some bugs in the nobl_sram simulation . 

My options:
FPGA isn't correctly tri-stating outputs. 
RAM is busted
Don't understand how ram works

	   
31 October 2003
Well, so, proving I'm a member of the winner class, I've decided to solder up an entire 'nother board. Except that this one somehow has a busted PROGRAM pin on the FPGA that shorts to ground. So we only get to play with that board if we replace the FPGA. 

We desoldered the ram from the other one, and have now shifted to using a much simpler test to figure out what's wrong. 

Very simple ram test (drumroll) appears to work, giving correct output when OE is high vs low. Make sure to set output slew to fast and drive with 6-8 ma to minimize ringing and undershoot. 


For memtest: wow, we got it to not report constant errors! and the addressing seems to be what we should be expecting! That's amazing!

We're using the current memtest. Although it looks like we get way more errors when we have ADDR3 and ADDR4 == ADDR2, i don't understand why. 

So, obviously there will be issues if we try to have a back-to-back read-write of the same address, ifonly because somehow the address is supposed to "magically" go through pipelining in that cycle. that's kinda lame. 

New Mem test: 4 addresses. Reads and writes are interleaved. 


CRUCIAL TO SUCESS is looking at the MAP report and making sure that the MD pins use TS, O, and I registers. 

Was getting strange single-address-pin-dependent errors, but they appear to have disappered when i moved memclk to CLK270. 

So, for some fucked-up reason, the tardo memory-test appears to work correctly. This must just be a pipelining issue, or something. I don't understand it. 

2 Nov 2003
  So, what i've learned:
  The output TS pins were having issues because of the "allow logic optimization across hierarchy" setting being true. Removing it showed MAP correctly placing the FFs in the output blocks. 
				 
  The CLK270 needs to drive the memory.  

Ram apears to work... we'll see... 

3 Nov 2003. 
  Well, now the RAM doesn't appear to be working, but fuck it, I don't care at the moment, I want to know what's wrong with the PHY. All the options point to us trying to develop a serial interface, even though I _really really_ don't want to screw with the GPIF stuff at the moment. Oh well, maybe I can make an easy hack interface or something. 
  Punting ram for a while, setting OE\ high.  

11 Nov 2003
Okay, after a long hard battle, the PHY works. Turns out that, surprise, you need to set the Isolate bit to off! Who would have thought! Now we're struggling with reading actual frames.

testsuite_rx : a simple system to read in a single <256-byte frame. The system reads in a frame and then sits on it until NEXTF is toggled high, at which point the address coutner is reset. Uses dual port block select ram to store the data. Outputs it on a simple parallel bus. 
 
There are really strange issues when we try and bind the IFCLK Input to a BUFG. I have no freaking idea what's causing this. 

