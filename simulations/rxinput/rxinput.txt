Unit tests for RXinput.

We have created a fake GMIIin module, GMIIinsim.vhd which contains an entity named GMIIin such that we can include it from the .do file and use it instead. Alas, this means that we can't have any differences in instantiation, i.e. no passing of filenames or anything like that. 

Our input format is a series of 16-bit hex words per line. Each is a single NEXTF transaction; thus every time we get NEXTF high for a cycle, the next clock tick we begin outputting these in sequence. 

The bits are:

7:0 DOUT
8 VALID
9 ENDF
10 EROUT
11 OFOUT

We stop a read when we get the ENDF signal. Alas, because the ram-writing is different here, we will instead adopt a different ram-writing strategy:
   Whenever the base pointer changes, compare the ram data values to those written in ram.dat


Things to check:
Do we successfully abort for:
Fifo overflow
RX_ER (phy error) frame
invalid CRC

Do we pass a frame when:
constant DV of all possible len mod 4
random DV-invalids (really important)
random lengths

do MD and MA always change with each other? Are they always constant? 


